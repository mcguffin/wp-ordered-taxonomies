<?php

/*
Plugin Name: WP Ordered Taxonomies
Plugin URI: http://wordpress.org/
Description: Enter description here.
Author: Jörn Lund
Version: 1.1.0
Author URI:
License: GPL3*/

/*  Copyright 2015  Jörn Lund

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License, version 2, as
    published by the Free Software Foundation.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
*/

/*
Plugin was generated by WP Plugin Scaffold
https://github.com/mcguffin/wp-plugin-scaffold
Command line args were: `"WP Order Taxonomies" admin_js admin_css admin git --force`
*/

if ( ! class_exists( 'OrderTaxonomies' ) ):
class OrderTaxonomies {

	private static $_instance = null;

	private $ordered_taxonomies = array();

	/**
	 * Getting a singleton.
	 *
	 * @return object single instance of OrderTaxonomies
	 */
	public static function instance() {
		if ( is_null( self::$_instance ) )
			self::$_instance = new self();
		return self::$_instance;
	}

	/**
	 * Private constructor
	 */
	private function __construct() {

		add_action( 'plugins_loaded', array( $this , 'load_textdomain' ) );
		add_action( 'init', array( $this , 'init' ) );

		add_option( 'ordered_taxonomies' , array( ) );

		register_activation_hook( __FILE__ , array( __CLASS__ , 'activate' ) );
//		register_deactivation_hook( __FILE__ , array( __CLASS__ , 'deactivate' ) );
//		register_uninstall_hook( __FILE__ , array( __CLASS__ , 'uninstall' ) );

		add_action( 'registered_taxonomy', array( $this , 'registered_taxonomy' ) , 20 ,3 );

	}

	function registered_taxonomy( $taxonomy , $object_type , $args ) {
		global $wp_taxonomies;
		if ( ! isset($wp_taxonomies[ $taxonomy ]->ordered) ) {
			$is_ordered = ( ( defined( 'PRIVATE_ORDERED_TAXONOMIES' ) && PRIVATE_ORDERED_TAXONOMIES && isset( $args[ 'ordered' ] ) && $args[ 'ordered' ] ) );
			$wp_taxonomies[ $taxonomy ]->ordered = $is_ordered;
		}
	}

	/**
	 * Load text domain
	 */
	public function load_textdomain() {
		load_plugin_textdomain( 'wp-ordered-taxonomies' , false, dirname( plugin_basename( __FILE__ ) ) . '/languages/' );
	}

	/**
	 * Init hook.
	 *
	 *  @action init
	 */
	public function init() {
		add_action('parse_term_query', array( $this , 'parse_term_query' ), 10, 1 );
	}

	/*
	 * customtaxorder_apply_order_filter
	 * Function to sort the standard WordPress Queries.
	 */
	function parse_term_query( $query ) {

		if ( 1 !== count( $query->query_vars['taxonomy'] ) ) {
			return;
		}

		if ( ! $this->is_ordered_taxonomy( $query->query_vars['taxonomy'][0] ) ) {
			return;
		}

		if ( isset( $_REQUEST['orderby'] ) && $_REQUEST['orderby'] !== 'term_order' ) {
			return;
		}

		$qv = $query->query_vars;
		$qv['meta_query'] = array(
			'relation'	=> 'OR',
			array(
				'key' => 'ordered_tax_sort_key',
				'compare' => 'EXISTS',
				'type'	=> 'NUMERIC',
			),
			array(
				'key' => 'ordered_tax_sort_key',
				'compare' => 'NOT EXISTS',
				'type'	=> 'NUMERIC',
			),
		);
		$qv['orderby'] = 'meta_value';
		//$qv['order'] = 'ASC';
		$query->query_vars = $qv;
	}


	private function is_ordered_taxonomy( $taxonomy ) {

		if ( ! $obj = get_taxonomy( $taxonomy ) ) {
			return false;
		};

		return boolval( $obj->ordered );
	}

	/**
	 *	Fired on plugin activation
	 */
	public static function activate() {
		global $wpdb;
		// rm deprcated col
		return self::_customtaxorder_uninstall();
	}

	/**
	 *	Remove terms.term_order Column from DB
	 */
	private static function _customtaxorder_uninstall() {
		global $wpdb;
		$init_query = $wpdb->query("SHOW COLUMNS FROM $wpdb->terms LIKE 'term_order'");
		if ( ! empty( $init_query ) ) {
			$wpdb->query("ALTER TABLE $wpdb->terms DROP COLUMN term_order");
		}
	}

	/**
	 *	Fired on plugin deactivation
	 */
	public static function deactivate() {}

}
OrderTaxonomies::instance();

endif;

if ( is_admin() ) {
	require_once plugin_dir_path(__FILE__) . 'include/class-OrderTaxonomiesAdmin.php';
	if ( ! defined( 'PRIVATE_ORDERED_TAXONOMIES' ) || ! PRIVATE_ORDERED_TAXONOMIES )
		require_once plugin_dir_path(__FILE__) . 'include/class-OrderTaxonomiesSettings.php';
}
